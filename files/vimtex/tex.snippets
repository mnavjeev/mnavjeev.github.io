global !p
texMathZones = ['texMathZone' + x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z', 'AmsA', 'AmsB', 'AmsC', 'AmsD', 'AmsE', 'AmsF', 'AmsG', 'AmsAS', 'AmsBS', 'AmsCS', 'AmsDS', 'AmsES', 'AmsFS', 'AmsGS' ]]
texIgnoreMathZones = ['texMathText']
texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")
ignore = texIgnoreMathZoneIds[0]
def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False
endglobal

#OLD SNIPPETS

snippet --> "implies" Ai
\implies
endsnippet

snippet <-- "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet mk "Math" wA
\(${1}\)`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
    ${1:${VISUAL}}
.\] $0
endsnippet


snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

# NEW SNIPPETS

global !p

def create_table(snip):
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]
	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	rows = int_val(rows)
	cols = int_val(cols)
	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	snip.buffer[snip.line] = ''
	final_str = old_spacing + "\\begin{tabular}{|" + "|".join(['$' + str(i + 1) for i in range(cols)]) + "|}\n"
	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * cols + j + offset) for j in range(cols)])
		final_str += " \\\\\\\n"
	final_str += old_spacing + "\\end{tabular}\n$0"
	snip.expand_anon(final_str)
def add_row(snip):
	row_len = int(''.join(s for s in snip.buffer[snip.line] if s.isdigit()))
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	snip.buffer[snip.line] = ''
	final_str = old_spacing
	final_str += " & ".join(['$' + str(j + 1) for j in range(row_len)])
	final_str += " \\\\\\"
	snip.expand_anon(final_str)
endglobal

snippet begl  "begininline" iA
\begin{$1}$0\end{$1}
endsnippet

snippet \begin "begin" iA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet "\\?b(egin)?" "begin{} / end{}" br
\begin{$1}
	$0
\end{$1}
endsnippet

snippet abs "abstract environment" b
\begin{abstract}
	$0
\end{abstract}
endsnippet

snippet tab "tabular / array environment" b
\begin{${1:t}${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${2:c}}
$0${2/(?<=.)(c|l|r)|./(?1: & )/g}
\end{$1${1/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
endsnippet

pre_expand "create_table(snip)"
snippet "gentbl(\d+)x(\d+)" "Generate table of *width* by *height*" r
endsnippet

pre_expand "add_row(snip)"
snippet "tr(\d+)" "Add table row of dimension ..." r
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{${4:t}${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}{${5:c}}
	$0${5/(?<=.)(c|l|r)|./(?1: & )/g}
	\end{$4${4/(t)$|(a)$|(.*)/(?1:abular)(?2:rray)/}}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${2:htpb}]
	\centering
	\includegraphics[width=${3:0.8}\linewidth]{${4:name.ext}}
	\caption{${4/(\w+)\.\w+/\u$1/}$0}%
	\label{fig:${4/(\w+)\.\w+/$1/}}
\end{figure}
endsnippet

snippet enum "Enumerate" b
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" b
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet it "Individual item" b
\item $0
endsnippet

snippet part "Part" b
\part{${1:part name}}%
\label{prt:${2:${1/(\w+)|\W+/(?1:\L$0\E:_)/ga}}}

$0
endsnippet

snippet cha "Chapter" b
\chapter{${1:chapter name}}%
\label{cha:${2:${1/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}

$0
endsnippet

snippet sec "Section"
\section{$1}%
\label{sec:$2}

$0
endsnippet

snippet sec* "Section"
\section*{$1}%
\label{sec:$2}

$0
endsnippet


snippet subsec "Subsection"
\subsection{$1}%
\label{$2}

$0
endsnippet

snippet subsec* "Subsection"
\subsection*{$1}%

$0
endsnippet

snippet ssubsec "Subsubsection"
\subsubsection{$1}%
\label{$2}

$0
endsnippet

snippet ssub* "Subsubsection"
\subsubsection*{$1}%

$0
endsnippet

snippet par "Paragraph"
\paragraph{$1}
\label{par:$2}

$0
endsnippet

snippet subp "Subparagraph"
\subparagraph{$1}%
\label{par:$2}

$0
endsnippet

snippet ac "Acroynm normal" b
\ac{${1:acronym}}
$0
endsnippet

snippet acl "Acroynm expanded" b
\acl{${1:acronym}}
$0
endsnippet

snippet ni "Non-indented paragraph" b
\noindent
$0
endsnippet

snippet pac "Package" b
\usepackage`!p snip.rv='[' if t[1] else ""`${1:options}`!p snip.rv = ']' if t[1] else ""`{${2:package}}$0
endsnippet


snippet "mint(ed)?( (\S+))?" "Minted code typeset" br
\begin{listing}
\begin{minted}[linenos,numbersep=5pt,frame=lines,framesep=2mm]{${1:`!p
snip.rv = match.group(3) if match.group(2) is not None else "language"`}}
${2:${VISUAL:code}}
\end{minted}
\caption{${3:caption name}}
\label{lst:${4:${3/\\\w+\{(.*?)\}|\\(.)|(\w+)|([^\w\\]+)/(?4:_:\L$1$2$3\E)/ga}}}
\end{listing}

$0
endsnippet

snippet gln "New glossary item" b
\newglossaryentry{${1:identifier}}
{
  name={${2:name}},
  first={${3:first occurrence}},
  sort={${4:sort value}},
  description={${0:description}},
}
endsnippet
snippet glnl "New long glossary item" b
\longnewglossaryentry{${1:identifier}}
{
  name={${2:name}},
  first={${3:first occurrence}},
  sort={${4:sort value}},
}
{
  ${0:description}
}
endsnippet

## User Added

# Bold text
snippet bf "Bold" i
\textbf{$1} $0
endsnippet

# Italic text
snippet ita "Italics" i
\textit{$1} $0
endsnippet

# Underlined text
snippet uline "Underline" i
\underline{$1} $0
endsnippet

#Bar
snippet bar "Bar" i
\overline{$1} $0
endsnippet

#Fractions
snippet frac "Frac"
\frac{$1}{$2}$0 
endsnippet

#Auto Complete Parentheses, Brackets

priority 0
snippet cb "\Bracket" iA
\\{$1${VISUAL}\\} $0
endsnippet

snippet \| "norm" iA
\|$1\|$0
endsnippet

snippet \lnm "left right norm" iA
\left\|$1\right\|$0
endsnippet

#priority 10
#snippet \( "\Parantheses" iA
#\($1${VISUAL}\)$0
#endsnippet 

priority 0
snippet [ "Square Bracket" iA
[$1${VISUAL}]$0
endsnippet

priority 10
snippet \[ "Math Bracket" iA
\[$1${VISUAL}\]$0
endsnippet

priority 10
snippet \lp "left parantheses" iA
\left($1${VISUAL}\right)$0
endsnippet

snippet \l| "left absolute value" iA
\left|$1${VISUAL}\right|$0
endsnippet

snippet \lb "left bracket" iA
\left[$1${VISUAL}\right]$0
endsnippet 

snippet \lcb "left curly brace" iA 
\left\\{$1\right\\}$0
endsnippet 

snippet $ "inline math" A
$$1$$0
endsnippet

snippet lang "left angle" i
\langle$1\rangle$0
endsnippet

snippet \lang "inner product" iA
\langle$1\rangle$0
endsnippet

priority 0

#Equations, Align 

snippet eqn "equation" 
\begin{equation}
	\label{eq:$2}
	$0
\end{equation}
endsnippet

snippet eqn* "equation*" A
\begin{equation*}
	$0
\end{equation*}
endsnippet

snippet split "split equation" 
\begin{split}
	$1
\end{split}$0
endsnippet

snippet algn "align" A
\begin{align$1}
	$0
\end{align$1}
endsnippet 

snippet mult "multiline" 
\begin{multline}
	$1
\end{multline}
$0
endsnippet

snippet mult* "multiline" A
\begin{multline*}
	$1
\end{multline*}
$0
endsnippet



#Add support for assumptions, theorems, etc. 

snippet cond "Condition"
\begin{condition}[$1]
	\label{cond:$2}
	$0
\end{condition}
endsnippet

snippet thm "Theorem"  
\begin{theorem}[$1]
	\label{thm:$2}
	$0
\end{theorem}
endsnippet

snippet thm* "Theorem*" A
\begin{theorem*}[$1]
	$0
\end{theorem*}
endsnippet

snippet prop "Proposition"
\begin{prop}[$1]
    \label{prop:$2}
	$0
\end{prop}
endsnippet

snippet prop* "Proposition" A
\begin{prop*}
	$0
\end{prop*}
endsnippet

snippet remark "Remark"
\begin{remark}[$1]
    \label{rem:$2}
	$0
\end{remark}
endsnippet

snippet remark* "Remark" A
\begin{remark*}
	$0
\end{remark*}
endsnippet

snippet assm "Assumption" 
\begin{assumption}[$1]
	\label{assm:$2}
	$0
\end{assumption}
endsnippet

snippet assm* "Assumption*" A
\begin{assumption*}[$1]
	$0
\end{assumption*}
endsnippet

snippet lemma "Lemma" 
\begin{lemma}[$1]
	\label{lemma:$2}
	$0
\end{lemma}
endsnippet

snippet lemma* "Lemma" A
\begin{lemma*}[$1]
	$0
\end{lemma*}
endsnippet

snippet ex "Example" 
\begin{example}[$1]
	\label{ex:$2}
	$0
\end{example}
endsnippet

snippet ex* "Example*" A
\begin{example*}
	$0
\end{example*}
endsnippet

snippet def "Definition" 
\begin{definition}[$1]
	\label{def:$2}
	$0
\end{definition}
endsnippet

snippet def* "Definition" A
\begin{definition*}[$1]
	$0
\end{definition*}
endsnippet

snippet corr "Corollary"
\begin{corollary}[$1]
    \label{corr:$2}
	$0
\end{corollary}
endsnippet

snippet corr* "Corollary"
\begin{corollary*}[$1]
	$0
\end{corollary*}
endsnippet

# Add Support for Matrices

snippet bmat "bmatrix" i
\begin{bmatrix} $0 \end{bmatrix} 
endsnippet

snippet pmat "pmatrix" i
\begin{pmatrix} $0 \end{pmatrix}
endsnippet

#snippet array "array" i
#\begin{array}{$1} $2 \end{array} $0
#endsnippet

snippet cases "cases/piecewise function" i
\begin{cases}
	$1 & \text{if }$2 \\
\end{cases}
$0
endsnippet
# Misc. Math Snippets
snippet \frac "fraction" iA
\frac{$1}{$2}$0 
endsnippet

snippet proof "proof" 
\begin{proof}
	$1
\end{proof}
$0
endsnippet

# Pictures
snippet picture "Picture"
\begin{picture}
	$0
\end{picture}
endsnippet

snippet arrow "Arrow" i
\put($1){\vector($2){$3}}$0
endsnippet

snippet line "line" i
\put($1){\line($2){$3}}$0
endsnippet

snippet circle "circle" i
\put($1){\circle$2{$3}}$0
endsnippet

snippet multiput "multiput" i
\multiput($1)($2){$3}{$4}$0
endsnippet

snippet oval "oval" i 
\put($1){\oval($2)}
endsnippet

# Shortcuts
snippet \bbg "mathbbG" iA
\mathbb{G}$0
endsnippet

snippet \rt "sqrt" iA
\sqrt{$1}$0
endsnippet


snippet h0 "null" i
\green{H_0}:$0
endsnippet

snippet h1 "alt" i
\red{H_1}:$0
endsnippet

snippet sseR "SSE Restricted" iA
\green{\text{SSE}_\text{R}}$0
endsnippet

snippet sseU "SSE Unrestricted" iA
\red{\text{SSE}_\text{U}}$0
endsnippet

snippet \what "widehat" iA
\widehat$0
endsnippet

snippet >> "\gg" iA
\gg$0
endsnippet

snippet \sr "Real" iA
\SR$0
endsnippet

snippet \jsum "J-Sum" iA
\sum_{j=1}^p $0
endsnippet

snippet 1/n "1/n" iA
\frac{1}{n} $0
endsnippet

snippet \isum "Standard sum" iA
\sum_{i=1}^n $0
endsnippet

snippet fnote "footnote" iA
\footnote{$1}$0
endsnippet

snippet \trace "trace" iA
\text{trace}
endsnippet

snippet \> "down arrow" iA
\downarrow
endsnippet

snippet \^ "up arrow" iA
\uparrow
endsnippet

snippet tsub "text subscript" iA
{\text{\tiny $1}}$0
endsnippet

snippet ind "indicator" i 
\bm{1}$0
endsnippet

snippet \fa "forall" iA
\forall $0
endsnippet

snippet " "quotes" iA
\`\`$0
endsnippet

snippet betah "beta hat" iA
\widehat{\beta}$0
endsnippet

snippet qhi "Q Hat Inverse" iA
\widehat{Q}^{-1}$0
endsnippet

snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

snippet >= "geq" iA
\geq $0
endsnippet

snippet <= "leq" iA
\leq $0
endsnippet

snippet \binom "binomial" i
\binom{$1}{$2}$0
endsnippet

snippet pderiv "partial derivative" iA
\frac{\partial $1}{\partial $2}$0
endsnippet

snippet eqref "equation reference" iA
\eqref{eq:$1}$0
endsnippet

#snippet aref "assumption reference" iA
#\ref{assm:$1}$0
#endsnippet

snippet tref "theorem reference" iA
\ref{thm:$1}$0
endsnippet

snippet pref "proposition reference" iA
\ref{prop:$1}$0
endsnippet

snippet sref "section reference" iA
\ref{sec:$1}$0
endsnippe:

snippet textbox "text box" 
\begin{center}
\fbox{
	\parbox{0.95\textwidth}{
	$1
	}
}
\end{center}$0
endsnippet

snippet ... "dots" iA
\dots$0
endsnippet

snippet <~ "lesssim" iA
\lesssim$0
endsnippet

snippet >~ "gtrsim" iA
\gtrsim$0
endsnippet

snippet \veps "varepsilon" iA
\varepsilon
endsnippet

# Text Snippets
snippet verbatim "verbatim" 
\begin{verbatim}
	$1
\end{verbatim}
$0
endsnippet

snippet \verb "verbatim in line" iA
\verb|$1|$0
endsnippet

snippet \fb "fbox" iA
\fbox{$1}$0
endsnippet

snippet \bsym "boldsymbol" iA
\boldsymbol{$1}$0
endsnippet


snippet href "hyperref" i
\href{$1}{$2}$0
endsnippet

# Beamer Snippets

snippet frame "New Slide"
\begin{frame}{$1} %Title
	\label{frame:$2} %Label 
	$0
\end{frame}
endsnippet

snippet checkboxes "Check Box Slide"
\frame{\frametitle{\insertsection}\framesubtitle{\insertsubsection}
	\begin{center}
	\begin{tabular}{lp{0.8\textwidth}}
		\uncheckedBox & Task A \\
		\uncheckedBox & Task B \\
		\checkedBox & Task C \\
	\end{tabular}
	\end{center}
}
endsnippet

snippet flowchart "Flowchart Slide"
\frame{\frametitle{\insertsection}\framesubtitle{\insertsubsection}
	\begin{center}
	\scalebox{0.7}{
	\begin{tikzpicture}
		\node[bn] (a) {Event A.};
		\node[on,right=0.5cm of a] (b) {Event B.};
		\node[rn,right=0.5cm of b] (c) {Event C.};
		\draw[to] (a) -- (b);
		\draw[to] (b) -- (c);
	\end{tikzpicture}
	}
	\end{center}
}
endsnippet

snippet button "Button" i
\hyperlink{${1:label}}{\beamerbutton{${2:displayed text}}}
endsnippet
